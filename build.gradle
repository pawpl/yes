plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

version = project.plugin_version
group = project.maven_group

configurations {
	rusherhackApi
	rusherhackApi.canBeResolved(true)
	compileOnly.extendsFrom(rusherhackApi)
	productionRuntime {
		extendsFrom configurations.minecraftLibraries
		extendsFrom configurations.loaderLibraries
		extendsFrom configurations.minecraftRuntimeLibraries
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		name = "rusherhack"
		//releases repository will have the latest api version for last stable rusherhack release
		//snapshots will always be the latest api version
		//url = "https://maven.rusherhack.org/releases"
		url = "https://maven.rusherhack.org/snapshots"
	}

	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	productionRuntime(modImplementation("net.fabricmc:fabric-loader:${project.fabric_loader_version}"))
	productionRuntime("net.fabricmc:intermediary:${project.minecraft_version}")

	//mojmap + parchment mappings
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.20.1:2023.09.03@zip")
	}

	//rusherhack api
	rusherhackApi "org.rusherhack:rusherhack-api:$minecraft_version-SNAPSHOT"
}

tasks.register('runPlugin', JavaExec) {
	group = "build"
	dependsOn remapJar, downloadAssets, copyPluginToRunDir
	classpath.from configurations.productionRuntime
	mainClass = "net.fabricmc.loader.impl.launch.knot.KnotClient"
	workingDir = file("run")

	doFirst {
		classpath.from loom.minecraftProvider.minecraftClientJar
		workingDir.mkdirs()

		args(
				"--assetIndex", loom.minecraftProvider.versionInfo.assetIndex().fabricId(loom.minecraftProvider.minecraftVersion()),
				"--assetsDir", new File(loom.files.userCache, "assets").absolutePath,
				"--gameDir", workingDir.absolutePath
		)

		def rusherLoaderJarFile = project.layout.getProjectDirectory().file("lib/rusherhack-loader.jar").asFile
		if (!rusherLoaderJarFile.exists()) {
			throw new GradleException("rusherhack-loader.jar must be copied to the lib directory!")
		}
		def rusherLoaderJarPath = project.layout.getProjectDirectory().file("lib/rusherhack-loader.jar").asFile.absolutePath

		jvmArgs(
				"-Drusherhack.enablePlugins=true",
				"-Dfabric.addMods=${rusherLoaderJarPath}",
		)
	}
}

tasks.register("copyPluginToRunDir", Copy) {
	group = "build"
	dependsOn remapJar
	from remapJar.outputs
	into file("run/rusherhack/plugins")
}

loom {

	//apply accesswidener from rusherhack-api
	for (final def f in zipTree(this.project.configurations.rusherhackApi.singleFile)) {
		if (f.name == "rusherhack.accesswidener") {
			accessWidenerPath = f
		}
	}

	//disable run configs
	runConfigs.configureEach {
		ideConfigGenerated = false
	}
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
	if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
		it.options.release = targetJavaVersion
	}
}

java {
	def javaVersion = JavaVersion.toVersion(targetJavaVersion)
	if (JavaVersion.current() < javaVersion) {
		toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
	}
	archivesBaseName = project.archives_base_name
}

processResources {
	inputs.property "plugin_version", project.plugin_version

	filesMatching("rusherhack-plugin.json") {
		expand(plugin_version: project.plugin_version)
	}
}

jar {
	manifest {
		//attributes.clear()
		attributes(
				"Minecraft-Version": project.minecraft_version
		)
	}
}
